function lab1

clear all;

% считываем из файла
X = [-17.04,-18.29,-17.38,-18.11,-18.96,-17.65,-17.02,-17.22,-16.25,-17.44,-17.69,-17.61,-17.09,-17.19,-16.02,-17.56,-16.94,-17.29,-16.93,-16.61,-19.38,-17.53,-16.39,-17.89,-17.98,-17.04,-16.22,-19.09,-18.91,-17.77,-18.30,-17.44,-18.84,-16.39,-16.13,-18.37,-16.37,-16.70,-17.78,-17.03,-17.76,-17.87,-17.20,-18.44,-17.19,-17.75,-16.81,-17.97,-18.03,-16.87,-16.10,-19.16,-16.51,-18.39,-16.48,-18.08,-17.49,-18.89,-19.09,-17.96,-18.40,-16.96,-18.15,-18.71,-17.81,-17.86,-19.47,-17.86,-17.60,-17.30,-17.60,-17.71,-18.42,-16.88,-16.76,-18.00,-17.97,-16.83,-18.00,-18.08,-17.61,-17.02,-16.73,-17.64,-18.76,-17.68,-18.04,-16.45,-18.79,-18.03,-17.38,-15.27,-15.97,-17.41,-18.61,-18.00,-17.42,-17.77,-19.05,-16.16,-16.27,-18.00,-18.90,-17.05,-17.46,-17.49,-18.20,-17.59,-15.78,-18.88,-18.53,-17.39,-17.83,-18.17,-16.15,-17.66,-17.76,-18.32,-17.70,-17.56]

% получаем вариационный ряд и его длину
X = sort(X)
n = size(X, 2)

% максимальный и минимальный элементы, размах
X_min = X(1)
X_max = X(end)
R = X_max - X_min

% вычисление оценок mu и S2 математического ожидания MX и дисперсии DX
mu = mean(X)
S2 = var(X)

% группировкa значений выборки в m = [log2 n] + 2 интервала
m = floor(log2(n) + 2)
h = R / m
intervals = zeros(m, 2)

% получаем границы интервалов
for i = 1:m
    intervals(i,1) = X(1) + h * i;
end 

% заполняем интервалыы
i = 1, j = 1
border = X(1) + h

while i < n
	if X(i) >= border && border < X(n) && j < m
        border = border + h
        j = j + 1
        continue % на случай, если в интервале нет чисел
    end
    
    intervals(j, 2) = intervals(j, 2) + 1
    i = i + 1
end

intervals(m, 2) = intervals(m, 2) + 1; % последний элемент

% гистограмма и ф-я плотности
gist = zeros(m, 2)
gist(1, 1) = (X(1) + intervals(1, 1))./2

% интервалы для гистограммы (значения по x)
for i = 2:m
    gist(i, 1) = (intervals(i - 1, 1) + intervals(i, 1))./2
end

% значения по y для гистограммы 
for i = 1:m
    y = intervals(i, 2)
    y = y / (n * h)
    gist(i,2) = y
end

% функция плотности нормальной случайной величины
f = 1 / sqrt(2 * pi * S2) * exp(-power((X - mu), 2) / (2 * S2))

% график гистограммы и функции плотности
bar(gist(:,1), gist(:,2), 1)
hold on
plot (X, f, 'r'), grid
figure()

% эмпирическая ф-я плотности и ф-я распределения
empir = zeros(1, n+2)
empir(1) = X(1) - 1

for i = 1:n
    empir(i + 1) = X(i)
end

empir(n + 2) = X(n) + 1

% вычисление интервалов для функций
n_emp = length(empir)
Mmin = min(empir)
Mmax = max(empir)
step = (Mmax - Mmin) / n_emp
Xn = Mmin : step : Mmax

% вычисление значений для эмпирической функции
E = zeros(n_emp, 1)

for i = 1:n_emp
	count = 0
    
	for j = 1:n
        if X(j) <= empir(i)
            count = count + 1
        end
    end
    
    E(i) = count / n
end

% функция распределения нормальной случайной величины
F = 1/2 * (1 + erf((Xn - mu) / sqrt(2 * S2)))

% графики
plot(Xn, F, "--"), grid
hold on
stairs(empir, E), grid

% вывод на экран
fprintf("Min = %4.2f\n", X_min);
fprintf("Max = %4.2f\n", X_max);
fprintf("R = %4.2f\n", R);
fprintf("mu = %4.2f\n", mu);
fprintf("sigma^2 = %4.2f\n", S2);
fprintf("m = %g\n", m);
for i = 1:m
	if i == 1
        fprintf('[%.6f', X_min);
    else
        fprintf('[%.6f', intervals(i-1, 1));
    end

    fprintf(' - %.6f', intervals(i, 1));
    if i == m
        fprintf(']');
    else
        fprintf(')');
    end
    fprintf(': %d elementov\n', intervals(i, 2));
end
end


